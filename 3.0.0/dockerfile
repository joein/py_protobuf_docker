FROM ubuntu:16.04

RUN apt-get update

RUN apt-get install -y tar wget autoconf libtool automake g++ make git bzip2 curl unzip zlib1g-dev patch

RUN apt-get install -y  vim

RUN apt-get update

RUN apt-get install -y software-properties-common python-software-properties

RUN add-apt-repository ppa:jonathonf/python-3.6

RUN apt-get update

RUN apt-get install -y python3.6

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.5 1

RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 2

RUN apt-get install -y python3-pip

RUN pip3 install protobuf==3.0.0

RUN mkdir protobuf_src

WORKDIR /protobuf_src

RUN git clone git://github.com/google/protobuf.git

WORKDIR /protobuf_src/protobuf

RUN git checkout v3.0.0

RUN sed -i 's/curl $curlopts -O https:\/\/googlemock.googlecode.com\/files\/gmock-1.7.0.zip/curl $curlopts -L -O https:\/\/github.com\/google\/googlemock\/archive\/release-1.7.0.zip/' autogen.sh

RUN sed -i 's/unzip -q gmock-1.7.0.zip/unzip -q release-1.7.0.zip/' autogen.sh && \
sed -i 's/rm gmock-1.7.0.zip/rm release-1.7.0.zip/' autogen.sh && \
sed -i 's/mv gmock-1.7.0 gmock/mv googlemock-release-1.7.0 gmock/' autogen.sh && \
sed -i '37a\  curl $curlopts -L -O https://github.com/google/googletest/archive/release-1.7.0.zip\' autogen.sh && \
sed -i '38a\  unzip -q release-1.7.0.zip' autogen.sh && \
sed -i '39a\  rm release-1.7.0.zip' autogen.sh && \
sed -i '40a\  mv googletest-release-1.7.0 gmock/gtest' autogen.sh

RUN ./autogen.sh

RUN ./configure

RUN sed -i '130a\inline Atomic64 NoBarrier_AtomicIncrement(volatile Atomic64* ptr,\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '131a\                                                    Atomic64 increment) {\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '132a\       return __atomic_add_fetch(ptr, increment, __ATOMIC_RELAXED);\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '133a\}\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '134a\\' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \

sed -i '135a\inline void NoBarrier_Store(volatile Atomic64* ptr, Atomic64 value) {\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '136a\       __atomic_store_n(ptr, value, __ATOMIC_RELAXED);\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '137a\}\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '138a\\' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \

sed -i '139a\inline Atomic64 NoBarrier_AtomicExchange(volatile Atomic64* ptr,\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '140a\                                                    Atomic64 new_value) {\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '141a\       return __atomic_exchange_n(ptr, new_value, __ATOMIC_RELAXED);\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '142a\}\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '143a\\' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \

sed -i '144a\inline Atomic64 NoBarrier_Load(volatile const Atomic64* ptr) {\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '145a\       return __atomic_load_n(ptr, __ATOMIC_RELAXED);\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '146a\}\ ' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h && \
sed -i '147a\\' /protobuf_src/protobuf/src/google/protobuf/stubs/atomicops_internals_generic_gcc.h

RUN make

RUN make check

RUN make install

RUN ldconfig

RUN protoc --version

CMD ["/bin/bash"]

